require('dotenv').config();
const { PrismaClient } = require('@prisma/client');

async function testDatabaseConnection() {
  console.log('üîç Testando conex√£o com o banco de dados...');
  
  // Verificar vari√°veis de ambiente
  console.log('\nüìã Vari√°veis de ambiente:');
  console.log('DATABASE_URL:', process.env.DATABASE_URL ? '‚úÖ Definida' : '‚ùå N√£o definida');
  console.log('NODE_ENV:', process.env.NODE_ENV || 'N√£o definido');
  
  if (!process.env.DATABASE_URL) {
    console.error('‚ùå DATABASE_URL n√£o est√° definida!');
    return;
  }
  
  // Mostrar parte da URL (sem senha)
  const urlParts = process.env.DATABASE_URL.split('@');
  if (urlParts.length > 1) {
    const hostPart = urlParts[1];
    console.log('Host:', hostPart.split('/')[0]);
  }
  
  const prisma = new PrismaClient({
    log: ['query', 'info', 'warn', 'error'],
  });
  
  try {
    console.log('\nüîå Tentando conectar...');
    
    // Testar conex√£o b√°sica
    await prisma.$connect();
    console.log('‚úÖ Conex√£o estabelecida com sucesso!');
    
    // Testar query simples
    console.log('\nüìä Testando query...');
    const userCount = await prisma.user.count();
    console.log(`‚úÖ Query executada com sucesso! Usu√°rios no banco: ${userCount}`);
    
    // Testar query mais complexa
    console.log('\nüîç Testando query com join...');
    const disposals = await prisma.disposal.findMany({
      take: 1,
      include: {
        user: {
          select: {
            name: true,
            email: true
          }
        }
      }
    });
    console.log(`‚úÖ Query com join executada! Descarte encontrado: ${disposals.length > 0 ? 'Sim' : 'N√£o'}`);
    
  } catch (error) {
    console.error('\n‚ùå Erro na conex√£o:');
    console.error('Tipo:', error.constructor.name);
    console.error('Mensagem:', error.message);
    console.error('C√≥digo:', error.code);
    
    if (error.code === 'P1001') {
      console.error('\nüí° Poss√≠vel solu√ß√£o:');
      console.error('- Verifique se o host do banco est√° correto');
      console.error('- Verifique se a porta 5432 est√° aberta');
      console.error('- Verifique se o firewall n√£o est√° bloqueando');
    } else if (error.code === 'P1002') {
      console.error('\nüí° Poss√≠vel solu√ß√£o:');
      console.error('- Verifique se as credenciais est√£o corretas');
      console.error('- Verifique se o usu√°rio tem permiss√µes');
    } else if (error.code === 'P1003') {
      console.error('\nüí° Poss√≠vel solu√ß√£o:');
      console.error('- Verifique se o banco de dados existe');
      console.error('- Verifique se o nome do banco est√° correto');
    } else if (error.code === 'P1008') {
      console.error('\nüí° Poss√≠vel solu√ß√£o:');
      console.error('- Verifique se o timeout est√° adequado');
      console.error('- Verifique a lat√™ncia da conex√£o');
    }
    
  } finally {
    await prisma.$disconnect();
    console.log('\nüîå Conex√£o fechada.');
  }
}

// Executar o teste
testDatabaseConnection().catch(console.error); 